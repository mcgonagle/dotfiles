# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
if [[ `uname` == "Darwin" ]]; then export ZSH="/Users/tom/.oh-my-zsh"; else export ZSH="/home/ubuntu/.oh-my-zsh"; fi

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
#ENABLE_CORRECTION="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git kubectl web-search gh kube-ps1)

source $ZSH/oh-my-zsh.sh
################################################################################
# User configuration
################################################################################

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# kube prompt stuff
#source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"
if [ -f '/opt/homebrew/Cellar/kube-ps1/0.8.0/share/kube-ps1.sh' ]; then . "/opt/homebrew/Cellar/kube-ps1/0.8.0/share/kube-ps1.sh" && PS1='$(kube_ps1)'$PS1; fi
if [[ `uname` == "Darwin" ]]; then kubeoff; fi



# Aliases
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
bindkey -v
autoload -U compinit; compinit
export GPG_TTY=$(tty)

## An alias to open .zshrc in vim
alias zshconfig="nvim ~/.zshrc"
## An alias to open the current directory in Finder
alias h="clear"
alias x="exit"
alias xx="exit"
alias ls="ls -G"
alias sl="ls"
alias ltr="ls -ltr"
alias l="ls -l"
alias ll="ls -l"
alias la="ls -la"
alias lla="ls -la"
alias ltra="ls -ltra"

export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000000
export SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.


export PATH=/usr/local/bin:$PATH


if [ -e /opt/homebrew/bin/zoxide ]; then eval "$(zoxide init zsh)"; fi
if [ -e /opt/homebrew/bin/nvim ]; then alias vi="nvim" && alias v="nvim" &&  alias val="nvim ~/.zshrc" && alias sal="source ~/.zshrc"; fi 
if [ -e /opt/homebrew/bin/starship ]; then alias starship="eval \"$(starship init zsh)\""; fi
if [[ `uname` == "Darwin" ]]; then source /Users/tom/.config/op/plugins.sh; fi
#eval $(op signin)
#OP_BIOMETRIC_UNLOCK_ENABLED=true


test -d ~/Documents/GitHub/awssume && export PATH=/Users/tom/Documents/GitHub/awssume/bin:$PATH
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
if [ -e /Users/tom/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/tom/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
#export PATH="${PATH}:/Users/tom/.avm/bin" # This adds the Armory Version Manager (AVM) and Armory CLI to the path
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/tom/Dropbox/Mac/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/tom/Dropbox/Mac/Downloads/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '/Users/tom/Dropbox/Mac/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/tom/Dropbox/Mac/Downloads/google-cloud-sdk/completion.zsh.inc'; fi
#adding autojump
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

#adding github copilot cli
if [ -e /opt/homebrew/bin/github-copilot-cli ]; then eval "$(github-copilot-cli alias -- "$0")"; fi


